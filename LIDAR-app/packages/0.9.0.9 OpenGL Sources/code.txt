 for(int j = 0 ; j < height ; j++)
{
            int step16 = width*2*j;
            for(int i = 0 ; i < width ; i++)
		{
                int pixel16 = step16 + 2*i;

                u_int16_t color_yuyv = *(u_int16_t *)(data + pixel16);
                u_int8_t high = (color_yuyv >> 8) & 0xff;
                u_int8_t low = color_yuyv & 0xff;
                Vec2b colorpix_cv;
                colorpix_cv[1] = high;
                colorpix_cv[0] = low;
                color_cv.at<cv::Vec2b>(j,i) = colorpix_cv;
            }
        }
        cvtColor(color_cv,color_cv_rgb,CV_YUV2RGB_YUYV);
        colorImage = QImage(color_cv_rgb.data,color_cv_rgb.cols,color_cv_rgb.rows,
                            color_cv_rgb.step,QImage::Format_RGB888).copy();
        emit newColorImage(colorImage);
        if(takeSnap){
            Mat color_cv_bgr;
            cvtColor(color_cv_rgb, color_cv_bgr, CV_RGB2BGR);
            QString color_filename = snapshotDir + QString("/color/")
                    + common_filename;
            out << color_filename << endl;
            try {
                imwrite(color_filename.toStdString(), color_cv_bgr, png_settings);
            } catch (cv::Exception& error) {
                QTextStream(stderr) << "error writing image" << error.what() << endl;
            }
            takeSnap = false;
        }

-----------------------------
for(int j = 0 ; j < height ; j++){
            int step24 = width*3*j;
            for(int i = 0 ; i < width ; i++)
              {
                int pixel24 = step24 + 3*i;
                u_int16_t depth = *(u_int16_t *)(data + pixel24);
                u_int8_t ir = data[pixel24 + 2];
                depth = int(depth/31.25 + 0.5); // convert to mm
                u_int8_t high = (depth >> 8) & 0xff;
                u_int8_t low = depth & 0xff;
                Vec2b depthpix_cv;
                depthpix_cv[0] = high;
                depthpix_cv[1] = low;
                depth_cv.at<cv::Vec2b>(j,i) = depthpix_cv;
                ir_cv.at<uchar>(j,i) = ir;
            }
        }